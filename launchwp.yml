---
- hosts: localhost
  connection: local
  become: true
  gather_facts: False
  vars:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
  tasks:
          - name: Launch t2.micro for WP on Docker
            ec2:
                    key_name: awsmoonhome
                    aws_access_key: "{{ec2_access_key}}"
                    aws_secret_key: "{{ec2_secret_key}}"
                    group: "{{group}}"
                    instance_type: t2.micro
                    image: ami-090f10efc254eaf55
                    region: eu-central-1
                    #                    volumes:
                    #                      - device_name: /dev/xvda
                    #                        volume_type: gp2
                    #                        volume_size: 8
                    wait: yes
                    wait_timeout: 360
                    assign_public_ip: yes
                    vpc_subnet_id: subnet-e6550e9b
                    monitoring: no
            register: ec2

          - name: Add new instance to host group
            debugger: on_failed
            add_host:
                    hostname: "{{ item.public_ip }}"
                    groupname: sandbox
            with_items: "{{ ec2.instances }}"
            
          - name: Wait for the SSH to come up
            debugger: on_failed
            delegate_to: "{{ item.public_dns_name }}"
            wait_for_connection:
                delay: 60
                timeout: 320
            with_items: "{{ ec2.instances }}"

- hosts: sandbox
  gather_facts: true
  become: true
  tasks:
     - name: Update
       apt: update_cache=yes
     - name: Remove old packages
       apt: autoclean=yes
     - name: Add docker gpg key
       apt_key:
               url: https://download.docker.com/linux/ubuntu/gpg
               state: present
     - apt_repository:
             repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
             state: present
             filename: docker

